// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR___locals__, (const byte*)"\x7b\x6a\x0a" "__locals__")
QDEF(MP_QSTR_BufferError, (const byte*)"\x1d\x59\x0b" "BufferError")
QDEF(MP_QSTR_FileExistsError, (const byte*)"\x5b\x14\x0f" "FileExistsError")
QDEF(MP_QSTR_FileNotFoundError, (const byte*)"\x78\x89\x11" "FileNotFoundError")
QDEF(MP_QSTR_FloatingPointError, (const byte*)"\x01\x34\x12" "FloatingPointError")
QDEF(MP_QSTR_UnboundLocalError, (const byte*)"\x99\x22\x11" "UnboundLocalError")
QDEF(MP_QSTR_ADC_0, (const byte*)"\x2c\xd6\x05" "ADC_0")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF(MP_QSTR_Adc, (const byte*)"\x63\xb2\x03" "Adc")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BAUDRATE_100KBPS, (const byte*)"\x51\xe0\x10" "BAUDRATE_100KBPS")
QDEF(MP_QSTR_BAUDRATE_1MBPS, (const byte*)"\x97\xcb\x0e" "BAUDRATE_1MBPS")
QDEF(MP_QSTR_BAUDRATE_400KBPS, (const byte*)"\x14\xb7\x10" "BAUDRATE_400KBPS")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_CAN_0, (const byte*)"\x86\xdf\x05" "CAN_0")
QDEF(MP_QSTR_CERT_NONE, (const byte*)"\x90\x4d\x09" "CERT_NONE")
QDEF(MP_QSTR_CERT_REQUIRED, (const byte*)"\x73\xce\x0d" "CERT_REQUIRED")
QDEF(MP_QSTR_CONTENT_TYPE_TEXT_HTML, (const byte*)"\xab\x74\x16" "CONTENT_TYPE_TEXT_HTML")
QDEF(MP_QSTR_CONTENT_TYPE_TEXT_PLAIN, (const byte*)"\x2c\xf6\x17" "CONTENT_TYPE_TEXT_PLAIN")
QDEF(MP_QSTR_Can, (const byte*)"\xc9\xcb\x03" "Can")
QDEF(MP_QSTR_Dac, (const byte*)"\x03\xbe\x03" "Dac")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF(MP_QSTR_Ds18b20, (const byte*)"\x9b\x60\x07" "Ds18b20")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_EepromI2C, (const byte*)"\xfd\xf4\x09" "EepromI2C")
QDEF(MP_QSTR_Eeprom_I2c, (const byte*)"\x42\x51\x0a" "Eeprom_I2c")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Event, (const byte*)"\xe9\x8a\x05" "Event")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_FLAGS_EXTENDED_FRAME, (const byte*)"\xc0\x1b\x14" "FLAGS_EXTENDED_FRAME")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_GET, (const byte*)"\x13\xbf\x03" "GET")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_HttpServer, (const byte*)"\x58\xf3\x0a" "HttpServer")
QDEF(MP_QSTR_HttpServerConnection, (const byte*)"\x0e\xdc\x14" "HttpServerConnection")
QDEF(MP_QSTR_HttpServerWebSocket, (const byte*)"\x2d\x29\x13" "HttpServerWebSocket")
QDEF(MP_QSTR_HttpServerWebsocket, (const byte*)"\x4d\x25\x13" "HttpServerWebsocket")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_I2CSoft, (const byte*)"\x53\x29\x07" "I2CSoft")
QDEF(MP_QSTR_I2C_Soft, (const byte*)"\x6c\x0f\x08" "I2C_Soft")
QDEF(MP_QSTR_INPUT, (const byte*)"\x53\x62\x05" "INPUT")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_Input, (const byte*)"\x93\x59\x05" "Input")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LockType, (const byte*)"\x36\x20\x08" "LockType")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MODE_MASTER, (const byte*)"\x05\xc4\x0b" "MODE_MASTER")
QDEF(MP_QSTR_MODE_SLAVE, (const byte*)"\xd4\xd6\x0a" "MODE_SLAVE")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OP_MODE_NULL, (const byte*)"\x42\x7b\x0c" "OP_MODE_NULL")
QDEF(MP_QSTR_OP_MODE_SOFTAP, (const byte*)"\x46\x1d\x0e" "OP_MODE_SOFTAP")
QDEF(MP_QSTR_OP_MODE_STATION, (const byte*)"\x43\x2a\x0f" "OP_MODE_STATION")
QDEF(MP_QSTR_OP_MODE_STATION_SOFTAP, (const byte*)"\xa3\x84\x16" "OP_MODE_STATION_SOFTAP")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OUTPUT, (const byte*)"\xda\x45\x06" "OUTPUT")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF(MP_QSTR_Output, (const byte*)"\x7a\x6e\x06" "Output")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_Owi, (const byte*)"\x94\xde\x03" "Owi")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF(MP_QSTR_PHY_MODE_11B, (const byte*)"\x45\xc5\x0c" "PHY_MODE_11B")
QDEF(MP_QSTR_PHY_MODE_11G, (const byte*)"\x40\xc5\x0c" "PHY_MODE_11G")
QDEF(MP_QSTR_PHY_MODE_11N, (const byte*)"\x49\xc5\x0c" "PHY_MODE_11N")
QDEF(MP_QSTR_PIN_GPIO00, (const byte*)"\x1c\x58\x0a" "PIN_GPIO00")
QDEF(MP_QSTR_PIN_GPIO01, (const byte*)"\x1d\x58\x0a" "PIN_GPIO01")
QDEF(MP_QSTR_PIN_GPIO02, (const byte*)"\x1e\x58\x0a" "PIN_GPIO02")
QDEF(MP_QSTR_PIN_GPIO03, (const byte*)"\x1f\x58\x0a" "PIN_GPIO03")
QDEF(MP_QSTR_PIN_GPIO04, (const byte*)"\x18\x58\x0a" "PIN_GPIO04")
QDEF(MP_QSTR_PIN_GPIO05, (const byte*)"\x19\x58\x0a" "PIN_GPIO05")
QDEF(MP_QSTR_PIN_GPIO06, (const byte*)"\x1a\x58\x0a" "PIN_GPIO06")
QDEF(MP_QSTR_PIN_GPIO07, (const byte*)"\x1b\x58\x0a" "PIN_GPIO07")
QDEF(MP_QSTR_PIN_GPIO08, (const byte*)"\x14\x58\x0a" "PIN_GPIO08")
QDEF(MP_QSTR_PIN_GPIO09, (const byte*)"\x15\x58\x0a" "PIN_GPIO09")
QDEF(MP_QSTR_PIN_GPIO10, (const byte*)"\x7d\x58\x0a" "PIN_GPIO10")
QDEF(MP_QSTR_PIN_GPIO11, (const byte*)"\x7c\x58\x0a" "PIN_GPIO11")
QDEF(MP_QSTR_PIN_GPIO12, (const byte*)"\x7f\x58\x0a" "PIN_GPIO12")
QDEF(MP_QSTR_PIN_GPIO13, (const byte*)"\x7e\x58\x0a" "PIN_GPIO13")
QDEF(MP_QSTR_PIN_GPIO14, (const byte*)"\x79\x58\x0a" "PIN_GPIO14")
QDEF(MP_QSTR_PIN_GPIO15, (const byte*)"\x78\x58\x0a" "PIN_GPIO15")
QDEF(MP_QSTR_PIN_GPIO16, (const byte*)"\x7b\x58\x0a" "PIN_GPIO16")
QDEF(MP_QSTR_PIN_GPIO17, (const byte*)"\x7a\x58\x0a" "PIN_GPIO17")
QDEF(MP_QSTR_PIN_GPIO18, (const byte*)"\x75\x58\x0a" "PIN_GPIO18")
QDEF(MP_QSTR_PIN_GPIO19, (const byte*)"\x74\x58\x0a" "PIN_GPIO19")
QDEF(MP_QSTR_PIN_GPIO21, (const byte*)"\x5f\x58\x0a" "PIN_GPIO21")
QDEF(MP_QSTR_PIN_GPIO22, (const byte*)"\x5c\x58\x0a" "PIN_GPIO22")
QDEF(MP_QSTR_PIN_GPIO23, (const byte*)"\x5d\x58\x0a" "PIN_GPIO23")
QDEF(MP_QSTR_PIN_GPIO25, (const byte*)"\x5b\x58\x0a" "PIN_GPIO25")
QDEF(MP_QSTR_PIN_GPIO26, (const byte*)"\x58\x58\x0a" "PIN_GPIO26")
QDEF(MP_QSTR_PIN_GPIO27, (const byte*)"\x59\x58\x0a" "PIN_GPIO27")
QDEF(MP_QSTR_PIN_GPIO32, (const byte*)"\xbd\x58\x0a" "PIN_GPIO32")
QDEF(MP_QSTR_PIN_GPIO33, (const byte*)"\xbc\x58\x0a" "PIN_GPIO33")
QDEF(MP_QSTR_PIN_GPIO34, (const byte*)"\xbb\x58\x0a" "PIN_GPIO34")
QDEF(MP_QSTR_PIN_GPIO35, (const byte*)"\xba\x58\x0a" "PIN_GPIO35")
QDEF(MP_QSTR_PIN_GPIO36, (const byte*)"\xb9\x58\x0a" "PIN_GPIO36")
QDEF(MP_QSTR_PIN_GPIO39, (const byte*)"\xb6\x58\x0a" "PIN_GPIO39")
QDEF(MP_QSTR_PIN_LED, (const byte*)"\x80\xd8\x07" "PIN_LED")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POST, (const byte*)"\x3d\x19\x04" "POST")
QDEF(MP_QSTR_PROTOCOL_TLS, (const byte*)"\x47\x6c\x0c" "PROTOCOL_TLS")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_Queue, (const byte*)"\xb4\x12\x05" "Queue")
QDEF(MP_QSTR_REFERENCE_VCC, (const byte*)"\x67\x9b\x0d" "REFERENCE_VCC")
QDEF(MP_QSTR_RESPONSE_CODE_200_OK, (const byte*)"\x82\xee\x14" "RESPONSE_CODE_200_OK")
QDEF(MP_QSTR_RESPONSE_CODE_404_NOT_FOUND, (const byte*)"\x18\x7d\x1b" "RESPONSE_CODE_404_NOT_FOUND")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SPEED_125KBPS, (const byte*)"\xa1\x1a\x0d" "SPEED_125KBPS")
QDEF(MP_QSTR_SPEED_1MBPS, (const byte*)"\xe0\xea\x0b" "SPEED_1MBPS")
QDEF(MP_QSTR_SPEED_250KBPS, (const byte*)"\xc0\xde\x0d" "SPEED_250KBPS")
QDEF(MP_QSTR_SPEED_2MBPS, (const byte*)"\xa3\xd9\x0b" "SPEED_2MBPS")
QDEF(MP_QSTR_SPEED_4MBPS, (const byte*)"\xa5\xda\x0b" "SPEED_4MBPS")
QDEF(MP_QSTR_SPEED_500KBPS, (const byte*)"\x22\x8a\x0d" "SPEED_500KBPS")
QDEF(MP_QSTR_SPEED_8MBPS, (const byte*)"\xa9\xdb\x0b" "SPEED_8MBPS")
QDEF(MP_QSTR_SPI_0, (const byte*)"\xa0\x41\x05" "SPI_0")
QDEF(MP_QSTR_SPI_1, (const byte*)"\xa1\x41\x05" "SPI_1")
QDEF(MP_QSTR_SPI_2, (const byte*)"\xa2\x41\x05" "SPI_2")
QDEF(MP_QSTR_SPI_H, (const byte*)"\xd8\x41\x05" "SPI_H")
QDEF(MP_QSTR_SPI_V, (const byte*)"\xc6\x41\x05" "SPI_V")
QDEF(MP_QSTR_SSLContext, (const byte*)"\xd6\xbd\x0a" "SSLContext")
QDEF(MP_QSTR_SSLSocket, (const byte*)"\x0c\x3e\x09" "SSLSocket")
QDEF(MP_QSTR_SocketType, (const byte*)"\xf8\x77\x0a" "SocketType")
QDEF(MP_QSTR_Spi, (const byte*)"\xef\x0d\x03" "Spi")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_Uart, (const byte*)"\x57\x9e\x04" "Uart")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_Ws2812, (const byte*)"\x28\x53\x06" "Ws2812")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR__thread, (const byte*)"\xd4\x02\x07" "_thread")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_acquire, (const byte*)"\x1d\xd3\x07" "acquire")
QDEF(MP_QSTR_action, (const byte*)"\x5b\xeb\x06" "action")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_address, (const byte*)"\x73\x53\x07" "address")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_allocate_lock, (const byte*)"\xec\xed\x0d" "allocate_lock")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_async_convert, (const byte*)"\x8b\xd6\x0d" "async_convert")
QDEF(MP_QSTR_async_wait, (const byte*)"\xd7\xf6\x0a" "async_wait")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_authorization, (const byte*)"\x9e\x1c\x0d" "authorization")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x3c\x08" "binascii")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_cafile, (const byte*)"\x21\x4d\x06" "cafile")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_cipher, (const byte*)"\x80\xf9\x06" "cipher")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_clients_max, (const byte*)"\x84\x6d\x0b" "clients_max")
QDEF(MP_QSTR_clock_stretching_sleep_us, (const byte*)"\xd4\x64\x19" "clock_stretching_sleep_us")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\xc8\x0b" "collections")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF(MP_QSTR_connection, (const byte*)"\xf3\xa3\x0a" "connection")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_content_length, (const byte*)"\x2f\xe3\x0e" "content_length")
QDEF(MP_QSTR_content_type, (const byte*)"\xeb\x6c\x0c" "content_type")
QDEF(MP_QSTR_convert, (const byte*)"\xf2\x9e\x07" "convert")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_crc32, (const byte*)"\x76\xe8\x05" "crc32")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_deselect, (const byte*)"\x0c\x9d\x08" "deselect")
QDEF(MP_QSTR_device, (const byte*)"\x3d\x93\x06" "device")
QDEF(MP_QSTR_devices, (const byte*)"\xae\xfa\x07" "devices")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_drivers, (const byte*)"\x08\x94\x07" "drivers")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_emacs, (const byte*)"\xdc\xa2\x05" "emacs")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_erase, (const byte*)"\xe5\x45\x05" "erase")
QDEF(MP_QSTR_esp_wifi, (const byte*)"\x6d\x36\x08" "esp_wifi")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_event, (const byte*)"\xc9\x69\x05" "event")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_expect, (const byte*)"\x9a\xd8\x06" "expect")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_family, (const byte*)"\x33\xca\x06" "family")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_flags, (const byte*)"\xfa\x8f\x05" "flags")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gateway, (const byte*)"\x7d\xe9\x07" "gateway")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_get_devices, (const byte*)"\x47\x7b\x0b" "get_devices")
QDEF(MP_QSTR_get_ident, (const byte*)"\xfe\xb1\x09" "get_ident")
QDEF(MP_QSTR_get_op_mode, (const byte*)"\xef\xd3\x0b" "get_op_mode")
QDEF(MP_QSTR_get_phy_mode, (const byte*)"\x71\x1d\x0c" "get_phy_mode")
QDEF(MP_QSTR_get_server_hostname, (const byte*)"\xb1\xb4\x13" "get_server_hostname")
QDEF(MP_QSTR_get_temperature, (const byte*)"\x00\x82\x0f" "get_temperature")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR_give_bus, (const byte*)"\xc3\xc1\x08" "give_bus")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x6d\x07" "hashlib")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_i2c, (const byte*)"\x5d\x5f\x03" "i2c")
QDEF(MP_QSTR_i2c_address, (const byte*)"\xf4\xa0\x0b" "i2c_address")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_inet, (const byte*)"\x93\xb3\x04" "inet")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_io, (const byte*)"\x23\x6f\x02" "io")
QDEF(MP_QSTR_ip_address, (const byte*)"\xd5\x39\x0a" "ip_address")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_json, (const byte*)"\xfd\xd1\x04" "json")
QDEF(MP_QSTR_kernel, (const byte*)"\xde\x09\x06" "kernel")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keyfile, (const byte*)"\x74\xf4\x07" "keyfile")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF(MP_QSTR_load_cert_chain, (const byte*)"\x8e\xd6\x0f" "load_cert_chain")
QDEF(MP_QSTR_load_verify_locations, (const byte*)"\xfa\xbe\x15" "load_verify_locations")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_lock, (const byte*)"\xae\x23\x04" "lock")
QDEF(MP_QSTR_locked, (const byte*)"\x0f\xba\x06" "locked")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_mask, (const byte*)"\x91\xba\x04" "mask")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_max_clock_stretching_us, (const byte*)"\x4f\x4b\x17" "max_clock_stretching_us")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_mem_current, (const byte*)"\x16\xba\x0b" "mem_current")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_mem_peak, (const byte*)"\x40\x25\x08" "mem_peak")
QDEF(MP_QSTR_mem_total, (const byte*)"\xfd\x6a\x09" "mem_total")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_netmask, (const byte*)"\xee\xfb\x07" "netmask")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_no_route, (const byte*)"\x62\x18\x08" "no_route")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_os, (const byte*)"\x79\x6f\x02" "os")
QDEF(MP_QSTR_owi, (const byte*)"\x74\x5f\x03" "owi")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_pin_device, (const byte*)"\x95\xd2\x0a" "pin_device")
QDEF(MP_QSTR_pin_devices, (const byte*)"\x46\x25\x0b" "pin_devices")
QDEF(MP_QSTR_ping_host_by_ip_address, (const byte*)"\x01\xb3\x17" "ping_host_by_ip_address")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_proto, (const byte*)"\x13\xc1\x05" "proto")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_read_into, (const byte*)"\x34\xb3\x09" "read_into")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_recv_into, (const byte*)"\xe4\x5d\x09" "recv_into")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF(MP_QSTR_recvfrom_into, (const byte*)"\x52\xa6\x0d" "recvfrom_into")
QDEF(MP_QSTR_reference, (const byte*)"\x0e\x1b\x09" "reference")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_request, (const byte*)"\x74\xb0\x07" "request")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_response_write, (const byte*)"\x24\x05\x0e" "response_write")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_routes, (const byte*)"\xcf\x2f\x06" "routes")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_sample_rate, (const byte*)"\x7e\x03\x0b" "sample_rate")
QDEF(MP_QSTR_sampling_rate, (const byte*)"\x1b\x0b\x0d" "sampling_rate")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_sec_websocket_key, (const byte*)"\xd2\x32\x11" "sec_websocket_key")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sendall, (const byte*)"\x38\x9f\x07" "sendall")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_server_hostname, (const byte*)"\x58\xef\x0f" "server_hostname")
QDEF(MP_QSTR_server_side, (const byte*)"\x64\xef\x0b" "server_side")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_set_mode, (const byte*)"\x3b\x30\x08" "set_mode")
QDEF(MP_QSTR_set_op_mode, (const byte*)"\xfb\x30\x0b" "set_op_mode")
QDEF(MP_QSTR_set_phy_mode, (const byte*)"\xe5\xa5\x0c" "set_phy_mode")
QDEF(MP_QSTR_set_verify_mode, (const byte*)"\x93\x74\x0f" "set_verify_mode")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_shutdown, (const byte*)"\xed\x80\x08" "shutdown")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF(MP_QSTR_slave_select, (const byte*)"\xdf\x01\x0c" "slave_select")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF(MP_QSTR_socket_read, (const byte*)"\x4d\x9c\x0b" "socket_read")
QDEF(MP_QSTR_socket_write, (const byte*)"\xa2\xf3\x0c" "socket_write")
QDEF(MP_QSTR_softap_dhcp_server_start, (const byte*)"\x3f\x4c\x18" "softap_dhcp_server_start")
QDEF(MP_QSTR_softap_dhcp_server_status, (const byte*)"\x8b\xeb\x19" "softap_dhcp_server_status")
QDEF(MP_QSTR_softap_dhcp_server_stop, (const byte*)"\x27\x6e\x17" "softap_dhcp_server_stop")
QDEF(MP_QSTR_softap_get_ip_info, (const byte*)"\x64\x89\x12" "softap_get_ip_info")
QDEF(MP_QSTR_softap_get_number_of_connected_stations, (const byte*)"\x6f\x1c\x27" "softap_get_number_of_connected_stations")
QDEF(MP_QSTR_softap_get_station_info, (const byte*)"\x27\xac\x17" "softap_get_station_info")
QDEF(MP_QSTR_softap_init, (const byte*)"\xdf\x4e\x0b" "softap_init")
QDEF(MP_QSTR_softap_set_ip_info, (const byte*)"\x70\x25\x12" "softap_set_ip_info")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_speed, (const byte*)"\x62\x0f\x05" "speed")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_ssl, (const byte*)"\xe9\x8d\x03" "ssl")
QDEF(MP_QSTR_stack_size, (const byte*)"\x31\x3b\x0a" "stack_size")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_start_new_thread, (const byte*)"\xd7\x25\x10" "start_new_thread")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_station_connect, (const byte*)"\xfe\x2d\x0f" "station_connect")
QDEF(MP_QSTR_station_dhcp_client_start, (const byte*)"\x46\xc8\x19" "station_dhcp_client_start")
QDEF(MP_QSTR_station_dhcp_client_status, (const byte*)"\x52\xc8\x1a" "station_dhcp_client_status")
QDEF(MP_QSTR_station_dhcp_client_stop, (const byte*)"\x3e\x8b\x18" "station_dhcp_client_stop")
QDEF(MP_QSTR_station_disconnect, (const byte*)"\x60\x5a\x12" "station_disconnect")
QDEF(MP_QSTR_station_get_ip_info, (const byte*)"\x41\x8f\x13" "station_get_ip_info")
QDEF(MP_QSTR_station_get_reconnect_policy, (const byte*)"\x9f\xa4\x1c" "station_get_reconnect_policy")
QDEF(MP_QSTR_station_get_status, (const byte*)"\xfd\x18\x12" "station_get_status")
QDEF(MP_QSTR_station_init, (const byte*)"\x1a\xbb\x0c" "station_init")
QDEF(MP_QSTR_station_set_ip_info, (const byte*)"\x55\x8b\x13" "station_set_ip_info")
QDEF(MP_QSTR_station_set_reconnect_policy, (const byte*)"\x0b\x90\x1c" "station_set_reconnect_policy")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_sys_lock, (const byte*)"\x88\x34\x08" "sys_lock")
QDEF(MP_QSTR_sys_reboot, (const byte*)"\xc2\x18\x0a" "sys_reboot")
QDEF(MP_QSTR_sys_unlock, (const byte*)"\xf3\x40\x0a" "sys_unlock")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_system, (const byte*)"\xa0\x14\x06" "system")
QDEF(MP_QSTR_take_bus, (const byte*)"\x45\xa0\x08" "take_bus")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF(MP_QSTR_thrd_get_by_name, (const byte*)"\x1a\xb0\x10" "thrd_get_by_name")
QDEF(MP_QSTR_thrd_get_env, (const byte*)"\x64\x26\x0c" "thrd_get_env")
QDEF(MP_QSTR_thrd_get_global_env, (const byte*)"\x50\x3f\x13" "thrd_get_global_env")
QDEF(MP_QSTR_thrd_get_log_mask, (const byte*)"\xf6\x55\x11" "thrd_get_log_mask")
QDEF(MP_QSTR_thrd_get_name, (const byte*)"\xde\x65\x0d" "thrd_get_name")
QDEF(MP_QSTR_thrd_get_prio, (const byte*)"\x5d\xef\x0d" "thrd_get_prio")
QDEF(MP_QSTR_thrd_join, (const byte*)"\x52\x35\x09" "thrd_join")
QDEF(MP_QSTR_thrd_self, (const byte*)"\x8c\xa9\x09" "thrd_self")
QDEF(MP_QSTR_thrd_set_env, (const byte*)"\x70\xae\x0c" "thrd_set_env")
QDEF(MP_QSTR_thrd_set_global_env, (const byte*)"\xc4\x33\x13" "thrd_set_global_env")
QDEF(MP_QSTR_thrd_set_log_mask, (const byte*)"\x62\x1e\x11" "thrd_set_log_mask")
QDEF(MP_QSTR_thrd_set_name, (const byte*)"\x4a\xcb\x0d" "thrd_set_name")
QDEF(MP_QSTR_thrd_set_prio, (const byte*)"\xc9\xba\x0d" "thrd_set_prio")
QDEF(MP_QSTR_thrd_yield, (const byte*)"\xad\x16\x0a" "thrd_yield")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_tm_hour, (const byte*)"\xa3\xa3\x07" "tm_hour")
QDEF(MP_QSTR_tm_isdst, (const byte*)"\xda\x32\x08" "tm_isdst")
QDEF(MP_QSTR_tm_mday, (const byte*)"\xd2\x6c\x07" "tm_mday")
QDEF(MP_QSTR_tm_min, (const byte*)"\xa9\x02\x06" "tm_min")
QDEF(MP_QSTR_tm_mon, (const byte*)"\x6f\x02\x06" "tm_mon")
QDEF(MP_QSTR_tm_sec, (const byte*)"\x36\xfc\x06" "tm_sec")
QDEF(MP_QSTR_tm_wday, (const byte*)"\x08\x96\x07" "tm_wday")
QDEF(MP_QSTR_tm_yday, (const byte*)"\x46\x23\x07" "tm_yday")
QDEF(MP_QSTR_tm_year, (const byte*)"\x8c\x1e\x07" "tm_year")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_transfer, (const byte*)"\xee\x9f\x08" "transfer")
QDEF(MP_QSTR_transfer_into, (const byte*)"\x8d\x01\x0d" "transfer_into")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF(MP_QSTR_ussl, (const byte*)"\x1c\xf2\x04" "ussl")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_wrap_socket, (const byte*)"\xcb\xf3\x0b" "wrap_socket")
QDEF(MP_QSTR_wrap_ssl, (const byte*)"\x62\xa9\x08" "wrap_ssl")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x37\x04" "zlib")
